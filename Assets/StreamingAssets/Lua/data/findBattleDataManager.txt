-- 匹配战斗数据管理
findBattleDataManager = singletonClass("loginDataManager")

function findBattleDataManager:ctor( )
    self.matching_room_info = nil
end

-- 房间数据来了
function findBattleDataManager:UpdateMatchingRoomInfo(info)
    self.matching_room_info = info

    -- 显示加载界面，干掉其他界面，切换到战斗场景去
    eventManager.postEvent({name = event_define.BattleLoadingLayout_SHOW})
    eventManager.postEvent({name = event_define.FindBattleLayout_CLOSE})
    eventManager.postEvent({name = event_define.LobbyLayout_CLOSE})
end

function findBattleDataManager:GetMatchingRoomInfo( )
    return self.matching_room_info
end

-- 请求匹配战斗
function findBattleDataManager:FindBattle(succCallback)
    local rq = networkManager:Instance():CreteEmptyRequestData()
    local failCallback = function ( )
        print("请求匹配失败")
    end
    networkManager:Instance():SendProto(RequestId.H_POST_JOIN_MATCHING_QUEUE, rq.seqNum, "proto_structs.RqData", rq, true, succCallback, failCallback)
end

-- 请求取消匹配
function findBattleDataManager:CancleFindBattle(succCallback)
    local rq = networkManager:Instance():CreteEmptyRequestData()
    local failCallback = function ( )
        print("取消失败")
    end
    networkManager:Instance():SendProto(RequestId.H_DELETE_QUIT_MATCHING_QUEUE, rq.seqNum, "proto_structs.RqData", rq, true, succCallback, failCallback)
end